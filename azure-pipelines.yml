# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- none

variables:
  imageRepo: helloworld
  tag: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: Build Stage
  jobs:
  - job:
    displayName: Build
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: Docker@2
      inputs:
        containerRegistry: 'MyDockerHub'
        repository: 'bwce'
        command: 'build'
        Dockerfile: '**/Dockerfile'
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Pipeline.Workspace)'
        artifact: '$(imageRepo):$(Build.BuildId)'
        publishLocation: 'pipeline'
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Pipeline.Workspace)/*.yml'
        artifact: 'manifests'
        publishLocation: 'pipeline'
- stage: Deploy
  displayName: Deploy To AKS
  dependsOn: Build
  jobs:
  - job:
    displayName: Deploy
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'current'
        artifactName: '''$(imageRepo):$(Build.BuildId)'''
        targetPath: '$(Pipeline.Workspace)'
    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'current'
        artifactName: 'manifests'
        targetPath: '$(Pipeline.Workspace)' 
    - task: KubernetesManifest@0
      inputs:
        action: 'createSecret'
        namespace: 'default'
        secretType: 'dockerRegistry'
        secretName: 'dockersecret'
        dockerRegistryEndpoint: 'MyDockerHub'
    - 
    - task: KubernetesManifest@0
      inputs:
        action: 'deploy'
        namespace: 'default'
        manifests: '$(Pipeline.Workspace)/deployment.yml $(Pipeline.Workspace)/service.yml'


